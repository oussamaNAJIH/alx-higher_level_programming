The ''1-my_list'' module
==========================

Using ''print_sorted''
--------------------------

Import module:
    >>> MyList = __import__('1-my_list').MyList


Correct Class Type test:
    >>> ml = MyList()
    >>> type(ml) == MyList
    True

Correct Instance test:
    >>> ml = MyList()
    >>> isinstance(ml, list)
    True

print_sorted method is an instance method:
    >>> type(MyList.__dict__['print_sorted'])
    <class 'function'>

print_sorted method called via class with no args:
    >>> ml.__class__.print_sorted()
    Traceback (most recent call last):
    TypeError: MyList.print_sorted() missing 1 required positional argument: 'self'

print_sorted method called with 1 arg:
    >>> ml.print_sorted([4, 2, 5])
    Traceback (most recent call last):
    TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given

print_sorted method called with 2 args:
    >>> ml.print_sorted([4, 2, 5], 1)
    Traceback (most recent call last):
    TypeError: MyList.print_sorted() takes 1 positional argument but 3 were given


Test List of integers:
    >>> my_list1 = MyList()
    >>> my_list1.append(1)
    >>> my_list1.append(4)
    >>> my_list1.append(2)
    >>> my_list1.append(3)
    >>> my_list1.append(5)
    >>> my_list1.print_sorted()
    [1, 2, 3, 4, 5]


Test basic 2:
    >>> my_list3 = MyList([7, 5, 3, 2, 0])
    >>> my_list3.print_sorted()
    [0, 2, 3, 5, 7]

Test empty list:
    >>> my_list1 = MyList()
    >>> my_list1.print_sorted()
    []

Test a list with duplicate values
    >>> my_list3 = MyList([3, 3, 2, 1, 1, 2])
    >>> my_list3.print_sorted()
    [1, 1, 2, 2, 3, 3]

Test a list with negatif values : 
    >>> my_list3 = MyList([3, -8, 2, 1, -9, -4])
    >>> my_list3.print_sorted()
    [-9, -8, -4, 1, 2, 3]

Test diffeent methods : 
    >>> my_list1 = MyList()
    >>> my_list1.append(1)
    >>> my_list1.append(4)
    >>> my_list1.append(2)
    >>> my_list1.append(3)
    >>> my_list1.append(5)
    >>> my_list1.pop()
    5
    >>> my_list1.pop()
    3
    >>> my_list1.print_sorted()
    [1, 2, 4]

Test List already ordered: 
    >>> my_list3 = MyList([1, 1, 2, 2, 3, 3])
    >>> my_list3.print_sorted()
    [1, 1, 2, 2, 3, 3]
